apply plugin: 'scala'

compileScala.options.encoding = 'UTF-8'

// fix scala+java mix to all use compileScala which uses correct dependency order
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

dependencies {
  compile project(':snappy-tools_' + scalaBinaryVersion)
  compile 'org.apache.logging.log4j:log4j-api:2.1'
  compile 'org.apache.logging.log4j:log4j-core:2.1'
  compile 'commons-io:commons-io:2.4'
  compile "junit:junit:${junitVersion}"

  if (new File(rootDir, "snappy-store/build.gradle").exists()) {
    compile project(':snappy-store:gemfirexd:client')
    compile project(':snappy-store:gemfirexd:core')
    compile project(':snappy-store:gemfirexd:tools')
    testCompile project(path: ':snappy-store:gemfirexd:tools', configuration: 'testOutput')
  } else {
    compile group: 'io.snappydata', name: 'gemfirexd-client', version: gemfireXDVersion
    compile group: 'io.snappydata', name: 'gemfirexd', version: gemfireXDVersion
    compile group: 'io.snappydata', name: 'gemfirexd-tools', version: gemfireXDVersion
    testCompile group: 'io.snappydata', name: 'gemfirexd-tools', version: gemfireXDVersion, classifier: 'tests'
  }
  if (new File(rootDir, "snappy-aqp/build.gradle").exists()) {
    compile project(':snappy-aqp')
  } else {
    compile "io.snappydata:snappy-aqp:${version}"
  }

  testCompile project(path: ':snappy-core_' + scalaBinaryVersion, configuration: 'testOutput')
}

task packageScalaDocs(type: Jar, dependsOn: scaladoc) {
  classifier = 'javadoc'
  from scaladoc
}
if (rootProject.hasProperty('enablePublish')) {
  artifacts {
    archives packageScalaDocs, packageSources
  }
}

testClasses.doLast {
  copyTestsCommonResources(buildDir)
}

test {
  dependsOn ':cleanDUnit'
  dependsOn ':product'
  maxParallelForks = 1
  minHeapSize '128m'
  maxHeapSize '1g'

  include '**/*DUnitTest.class'

  workingDir = "${testResultsBase}/dunit"

  binResultsDir = file("${workingDir}/binary")
  reports.html.destination = file("${workingDir}/html")
  reports.junitXml.destination = file(workingDir)

  systemProperties 'java.net.preferIPv4Stack': 'true'
}
