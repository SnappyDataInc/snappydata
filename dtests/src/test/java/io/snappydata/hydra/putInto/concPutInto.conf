hydra.Prms-testRequirement = "Test to verify concurrent putInto functionality using snappy job";
hydra.Prms-testDescription = "
This test starts the snappy cluster.
Creates column table using sql script.
Runs the snappy job doing concurrent putInto and queries.
";

INCLUDE $JTESTS/io/snappydata/hydra/cluster/startEmbeddedModeCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_testLTable.sql
            threadGroups = snappyThreads
            ;

/*TASK      taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.ConcurrentPutInto
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = snappyStoreThreads;*/

TASK        taskClass   = io.snappydata.hydra.putInto.SnappyPutIntoTest taskMethod  = HydraTask_concPutIntoUsingJDBCConn
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = snappyStoreThreads;

INCLUDE $JTESTS/io/snappydata/hydra/cluster/stopEmbeddedModeCluster.conf;

io.snappydata.hydra.cluster.SnappyPrms-useJDBCConnInSnappyJob = true;
hydra.Prms-maxResultWaitSec           = 10800;
hydra.Prms-maxCloseTaskResultWaitSec  = 10800;