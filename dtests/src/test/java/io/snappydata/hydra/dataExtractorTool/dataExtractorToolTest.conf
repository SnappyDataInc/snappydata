hydra.Prms-testRequirement = "Test to verify ,when the cluster is started in recovery mode ,it is started in read only mode.";
hydra.Prms-testDescription = "The test starts a normal cluster ,creates tables and populates it.
 Then the cluster is stopped and restarted in recovery mode.After the cluster is started in recovery mode, dml ops are executed,
  validation is done ,such that only SELECT operation should be permitted.";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = ${scriptName}
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyThreads;

// Take table count
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_storeDataCount
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isBeforeRestart = true
            threadGroups = snappyThreads;

//Start the cluster in recovery mode.
INITTASK   taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_startClusterInRecoveryMode
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${snappyBinPath}
           io.snappydata.hydra.security.SnappySecurityPrms-isSecurity = true
           threadGroups = snappyThreads;

// Take table count
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_validateDataCount
            threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_ExtractData
           threadGroups = snappyThreads;

//Execute DML query using jdbc connection and validate, they should not work in recovery mode
INITTASK   taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_executeQuery
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dmlFileLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 4
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           threadGroups = snappyThreads;

//Execute DDL query using jdbc connection and validate, they should not work in recovery mode
INITTASK   taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_executeQuery
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${ddlFileLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 5 //decide the cnt after running them manually
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           threadGroups = snappyThreads;

//Execute the extracted DDLs and then load data using the saved data in parquet format
INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;