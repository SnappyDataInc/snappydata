/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

package io.snappydata.hydra.adAnalytics;

@SuppressWarnings("all")
/** A basic schema for storing ImpressionLog messages */
@org.apache.avro.specific.AvroGenerated
public class AdImpressionLog extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdImpressionLog\",\"namespace\":\"io.snappydata.hydra.adAnalytics\",\"doc\":\"A basic schema for storing ImpressionLog messages\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"timestamp\"},{\"name\":\"publisher\",\"type\":\"string\",\"doc\":\"publisher\"},{\"name\":\"advertiser\",\"type\":\"string\",\"doc\":\"advertiser\"},{\"name\":\"website\",\"type\":\"string\",\"doc\":\"website\"},{\"name\":\"geo\",\"type\":\"string\",\"doc\":\"geo\"},{\"name\":\"bid\",\"type\":\"double\",\"doc\":\"bid\"},{\"name\":\"cookie\",\"type\":\"string\",\"doc\":\"cookie\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** timestamp */
  @Deprecated public long timestamp;
  /** publisher */
  @Deprecated public java.lang.CharSequence publisher;
  /** advertiser */
  @Deprecated public java.lang.CharSequence advertiser;
  /** website */
  @Deprecated public java.lang.CharSequence website;
  /** geo */
  @Deprecated public java.lang.CharSequence geo;
  /** bid */
  @Deprecated public double bid;
  /** cookie */
  @Deprecated public java.lang.CharSequence cookie;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AdImpressionLog() {}

  /**
   * All-args constructor.
   */
  public AdImpressionLog(java.lang.Long timestamp, java.lang.CharSequence publisher, java.lang.CharSequence advertiser, java.lang.CharSequence website, java.lang.CharSequence geo, java.lang.Double bid, java.lang.CharSequence cookie) {
    this.timestamp = timestamp;
    this.publisher = publisher;
    this.advertiser = advertiser;
    this.website = website;
    this.geo = geo;
    this.bid = bid;
    this.cookie = cookie;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return publisher;
    case 2: return advertiser;
    case 3: return website;
    case 4: return geo;
    case 5: return bid;
    case 6: return cookie;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: publisher = (java.lang.CharSequence)value$; break;
    case 2: advertiser = (java.lang.CharSequence)value$; break;
    case 3: website = (java.lang.CharSequence)value$; break;
    case 4: geo = (java.lang.CharSequence)value$; break;
    case 5: bid = (java.lang.Double)value$; break;
    case 6: cookie = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * timestamp   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * timestamp   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'publisher' field.
   * publisher   */
  public java.lang.CharSequence getPublisher() {
    return publisher;
  }

  /**
   * Sets the value of the 'publisher' field.
   * publisher   * @param value the value to set.
   */
  public void setPublisher(java.lang.CharSequence value) {
    this.publisher = value;
  }

  /**
   * Gets the value of the 'advertiser' field.
   * advertiser   */
  public java.lang.CharSequence getAdvertiser() {
    return advertiser;
  }

  /**
   * Sets the value of the 'advertiser' field.
   * advertiser   * @param value the value to set.
   */
  public void setAdvertiser(java.lang.CharSequence value) {
    this.advertiser = value;
  }

  /**
   * Gets the value of the 'website' field.
   * website   */
  public java.lang.CharSequence getWebsite() {
    return website;
  }

  /**
   * Sets the value of the 'website' field.
   * website   * @param value the value to set.
   */
  public void setWebsite(java.lang.CharSequence value) {
    this.website = value;
  }

  /**
   * Gets the value of the 'geo' field.
   * geo   */
  public java.lang.CharSequence getGeo() {
    return geo;
  }

  /**
   * Sets the value of the 'geo' field.
   * geo   * @param value the value to set.
   */
  public void setGeo(java.lang.CharSequence value) {
    this.geo = value;
  }

  /**
   * Gets the value of the 'bid' field.
   * bid   */
  public java.lang.Double getBid() {
    return bid;
  }

  /**
   * Sets the value of the 'bid' field.
   * bid   * @param value the value to set.
   */
  public void setBid(java.lang.Double value) {
    this.bid = value;
  }

  /**
   * Gets the value of the 'cookie' field.
   * cookie   */
  public java.lang.CharSequence getCookie() {
    return cookie;
  }

  /**
   * Sets the value of the 'cookie' field.
   * cookie   * @param value the value to set.
   */
  public void setCookie(java.lang.CharSequence value) {
    this.cookie = value;
  }

  /** Creates a new AdImpressionLog RecordBuilder */
  public static io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder newBuilder() {
    return new io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder();
  }
  
  /** Creates a new AdImpressionLog RecordBuilder by copying an existing Builder */
  public static io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder newBuilder(io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder other) {
    return new io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder(other);
  }
  
  /** Creates a new AdImpressionLog RecordBuilder by copying an existing AdImpressionLog instance */
  public static io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder newBuilder(io.snappydata.hydra.adAnalytics.AdImpressionLog other) {
    return new io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder(other);
  }
  
  /**
   * RecordBuilder for AdImpressionLog instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdImpressionLog>
    implements org.apache.avro.data.RecordBuilder<AdImpressionLog> {

    private long timestamp;
    private java.lang.CharSequence publisher;
    private java.lang.CharSequence advertiser;
    private java.lang.CharSequence website;
    private java.lang.CharSequence geo;
    private double bid;
    private java.lang.CharSequence cookie;

    /** Creates a new Builder */
    private Builder() {
      super(io.snappydata.hydra.adAnalytics.AdImpressionLog.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publisher)) {
        this.publisher = data().deepCopy(fields()[1].schema(), other.publisher);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.advertiser)) {
        this.advertiser = data().deepCopy(fields()[2].schema(), other.advertiser);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.website)) {
        this.website = data().deepCopy(fields()[3].schema(), other.website);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.geo)) {
        this.geo = data().deepCopy(fields()[4].schema(), other.geo);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bid)) {
        this.bid = data().deepCopy(fields()[5].schema(), other.bid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cookie)) {
        this.cookie = data().deepCopy(fields()[6].schema(), other.cookie);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AdImpressionLog instance */
    private Builder(io.snappydata.hydra.adAnalytics.AdImpressionLog other) {
            super(io.snappydata.hydra.adAnalytics.AdImpressionLog.SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publisher)) {
        this.publisher = data().deepCopy(fields()[1].schema(), other.publisher);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.advertiser)) {
        this.advertiser = data().deepCopy(fields()[2].schema(), other.advertiser);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.website)) {
        this.website = data().deepCopy(fields()[3].schema(), other.website);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.geo)) {
        this.geo = data().deepCopy(fields()[4].schema(), other.geo);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bid)) {
        this.bid = data().deepCopy(fields()[5].schema(), other.bid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cookie)) {
        this.cookie = data().deepCopy(fields()[6].schema(), other.cookie);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'timestamp' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'publisher' field */
    public java.lang.CharSequence getPublisher() {
      return publisher;
    }
    
    /** Sets the value of the 'publisher' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setPublisher(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.publisher = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'publisher' field has been set */
    public boolean hasPublisher() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'publisher' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearPublisher() {
      publisher = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'advertiser' field */
    public java.lang.CharSequence getAdvertiser() {
      return advertiser;
    }
    
    /** Sets the value of the 'advertiser' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setAdvertiser(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.advertiser = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'advertiser' field has been set */
    public boolean hasAdvertiser() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'advertiser' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearAdvertiser() {
      advertiser = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'website' field */
    public java.lang.CharSequence getWebsite() {
      return website;
    }
    
    /** Sets the value of the 'website' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setWebsite(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.website = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'website' field has been set */
    public boolean hasWebsite() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'website' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearWebsite() {
      website = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'geo' field */
    public java.lang.CharSequence getGeo() {
      return geo;
    }
    
    /** Sets the value of the 'geo' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setGeo(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.geo = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'geo' field has been set */
    public boolean hasGeo() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'geo' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearGeo() {
      geo = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'bid' field */
    public java.lang.Double getBid() {
      return bid;
    }
    
    /** Sets the value of the 'bid' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setBid(double value) {
      validate(fields()[5], value);
      this.bid = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'bid' field has been set */
    public boolean hasBid() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'bid' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearBid() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'cookie' field */
    public java.lang.CharSequence getCookie() {
      return cookie;
    }
    
    /** Sets the value of the 'cookie' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder setCookie(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.cookie = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'cookie' field has been set */
    public boolean hasCookie() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'cookie' field */
    public io.snappydata.hydra.adAnalytics.AdImpressionLog.Builder clearCookie() {
      cookie = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public AdImpressionLog build() {
      try {
        AdImpressionLog record = new AdImpressionLog();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.publisher = fieldSetFlags()[1] ? this.publisher : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.advertiser = fieldSetFlags()[2] ? this.advertiser : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.website = fieldSetFlags()[3] ? this.website : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.geo = fieldSetFlags()[4] ? this.geo : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.bid = fieldSetFlags()[5] ? this.bid : (java.lang.Double) defaultValue(fields()[5]);
        record.cookie = fieldSetFlags()[6] ? this.cookie : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
