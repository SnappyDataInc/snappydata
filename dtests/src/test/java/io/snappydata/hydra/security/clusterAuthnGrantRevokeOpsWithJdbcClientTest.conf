hydra.Prms-testRequirement = "Test to verify authentication of custer startUp and authorization of DMLs
                              with Security flag on with JDBC client";
hydra.Prms-testDescription = "In this test a secure snappy cluster is started by admin user.
                              Then gemfire2 creates column and row tables through snapy-shell and
                              grants permission to to dml operations to gemfire3 and gemfire4.
                              All the available users authorized/unauthorized perform dml operations.
                              Then admin revokes the dml opertion permissions and again users perform dml
                              operations.In both the cases validation is checked  by comparing the number
                              of expected and unexpected Exceptions caught.";

INCLUDE $JTESTS/io/snappydata/hydra/security/startSnappyCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_GrantSchemaPermisson
            io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire2
            io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire2
            io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
            threadGroups = snappyThreads;

INITTASK    taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_columnTables_persistent.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire2
            io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire2
            threadGroups = snappyThreads;

//Check authorization for external tables with grant
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-isExtTblSecurity = true
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.staging_employees gemfire2.staging_categories
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.staging_employees gemfire2.staging_categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 15
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           threadGroups = snappyThreads;

//Check authorization for external tables with revoke
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-isExtTblSecurity = true
           io.snappydata.hydra.security.SnappySecurityPrms-isRevoke = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.staging_employees gemfire2.staging_categories
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.staging_employees gemfire2.staging_categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 30
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = false
           threadGroups = snappyThreads;


//Check dml ops authorization with GRANT for individual users
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 44
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           threadGroups = snappyThreads;

//Check dml ops authorization with REVOKE for individual users
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-isRevoke = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 66
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = false
           threadGroups = snappyThreads;

//Check dml ops authorization with GRANT to PUBLIC
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           io.snappydata.hydra.security.SnappySecurityPrms-isPublicAccess = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 33
             io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           threadGroups = snappyThreads;

//Check dml ops authorization with REVOKE to PUBLIC
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-isRevoke = true
           io.snappydata.hydra.security.SnappySecurityPrms-isPublicAccess = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = SELECT INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 66
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = false
           threadGroups = snappyThreads;

//Check dml ops authorization with GRANT to only selected ops for individual users
INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_performGrantRevokeCmd
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire3 gemfire4
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = INSERT UPDATE DELETE
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.security.SnappySecurityTest taskMethod  = HydraTask_runQuery
           io.snappydata.hydra.security.SnappySecurityPrms-userName = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-passWord = gemfire1 gemfire2 gemfire3 gemfire4 gemfire5
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dataLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-onSchema = gemfire2.employees gemfire2.categories
           io.snappydata.hydra.security.SnappySecurityPrms-dmlOperations = INSERT UPDATE DELETE
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 62
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           io.snappydata.hydra.security.SnappySecurityPrms-isGrant = true
           threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/security/stopSnappyCluster.conf;

hydra.Prms-totalTaskTimeSec           = 100;
hydra.Prms-maxResultWaitSec           = 1800;

hydra.Prms-maxCloseTaskResultWaitSec  = 1800;
hydra.Prms-serialExecution            = true;

hydra.CachePrms-names = defaultCache;
sql.SQLPrms-useGfxdConfig = true;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;
io.snappydata.hydra.security.SnappySecurityPrms-isSecurity = true;
io.snappydata.hydra.cluster.SnappyPrms-locatorLauncherProps = " -J-Dsnappydata.RESTRICT_TABLE_CREATION=true ";
io.snappydata.hydra.cluster.SnappyPrms-serverLauncherProps = " -J-Dsnappydata.RESTRICT_TABLE_CREATION=true ";
io.snappydata.hydra.cluster.SnappyPrms-leaderLauncherProps = " -J-Dsnappydata.RESTRICT_TABLE_CREATION=true -DCHECK_EXTERNAL_TABLE_AUTHZ=true ";

