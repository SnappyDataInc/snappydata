hydra.Prms-testRequirement = "Test for Hive Thrift Server concurrency.";
hydra.Prms-testDescription = "This test create, insert, update and delete records from beeline to snappy and vice versa.
                                                         All the DML operations are concurrent";


INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_CreateTableFromBeeline
                   threadGroups = snappyThreads;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_CreateFunction
                   threadGroups = snappyThreads;

TASK taskClass = io.snappydata.hydra.cluster.SnappyTest  taskMethod = HydraTask_executeSnappyJob
                                 io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.hiveThriftServer.HiveThriftServerConcurrentOps
                                 io.snappydata.hydra.cluster.SnappyPrms-userAppName = "HiveThriftServerConcurrent_Validation"
                                 io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
                                 threadGroups = snappyStoreThreads;


CLOSETASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_DropFunction
                        threadGroups = snappyThreads;

CLOSETASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_DropTableFromBeeline
                        threadGroups = snappyThreads;



INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-maxResultWaitSec = 7200;