hydra.Prms-testDescription = "
This test starts the snappy cluster, initializes snappyContext.
Creates Row,Column Table using SQL way, loads the parquet data into tables.
And then executes the user provided sql scripts and jobs.";

INCLUDE $JTESTS/io/snappydata/hydra/cluster/sample.inc;

CLOSETASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_stopSnappyLeader
threadGroups = snappyThreads;

CLOSETASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_stopSnappyServers
threadGroups = snappyThreads;

CLOSETASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_stopSnappyLocator
threadGroups = snappyThreads;

CLOSETASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_deleteSnappyConfig
threadGroups = snappyThreads;

ENDTASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_cleanUpSnappyProcessesOnFailure
clientNames = locator1;

hydra.Prms-totalTaskTimeSec           = 900;
hydra.Prms-maxResultWaitSec           = 900;

hydra.Prms-maxCloseTaskResultWaitSec  = 900;
hydra.Prms-serialExecution            = false;

hydra.CachePrms-names = defaultCache;
sql.SQLPrms-useGfxdConfig = true;

/* end task must stop snappy members because they are not stopped by Hydra */
hydra.Prms-alwaysDoEndTasks = true;

hydra.VmPrms-extraVMArgs   += fcn "hydra.TestConfigFcns.duplicate
                                  (\"-Xms512m -Xmx1g \", ${${A}Hosts}, true)"
                             ncf
                             ,
                             fcn "hydra.TestConfigFcns.duplicate
                                  (\"-Xms512m -Xmx1g \", ${${B}Hosts}, true)"
                             ncf;
hydra.VmPrms-extraVMArgsSUN += "-XX:PermSize=64M -XX:MaxPermSize=256m";

io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNamesForInitTask = create_and_load_column_table.sql create_and_load_sample_table.sql create_and_load_row_table.sql olap_queries.sql;
io.snappydata.hydra.cluster.SnappyPrms-sqlScriptParamsForInitTask = airlineParquetData " " airportcodeParquetData;

io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNamesForTask = olap_queries.sql oltp_queries.sql;
io.snappydata.hydra.cluster.SnappyPrms-jobClassNamesForTask = io.snappydata.hydra.AirlineDataQueriesJob;
io.snappydata.hydra.cluster.SnappyPrms-jobExecutionTimeInMillisForTask = 720000;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = gemfirexd-scala-tests-0.1.0-SNAPSHOT-tests.jar;
