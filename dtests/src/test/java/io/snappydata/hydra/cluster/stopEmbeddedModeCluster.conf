hydra.Prms-testRequirement = "Test to stop the snappy embedded mode cluster started using startEmbeddedModeCluster.conf";
hydra.Prms-testDescription = "This test stops the snappy embedded mode cluster started using startEmbeddedModeCluster.conf.";

ENDTASK     taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_dumpStacks
            clientNames = locator1;

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_1.inc;

THREADGROUP snappyThreads
            totalThreads = 1
            totalVMs     = 1
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${A}\",
                                ${${A}Hosts}, true)" ncf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_initializeSnappyTest
            runMode = always
            threadGroups = snappyThreads;

ENDTASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_stopSnappyCluster
            clientNames = snappy1;

ENDTASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_deleteSnappyConfig
            clientNames = snappy1;

ENDTASK     taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_cleanUpSnappyProcessesOnFailure
            clientNames = snappy1;

io.snappydata.hydra.cluster.SnappyPrms-useSmartConnectorMode = true;
io.snappydata.hydra.cluster.SnappyPrms-isStopMode = true;
io.snappydata.hydra.cluster.SnappyPrms-isLongRunningTest = true;

hydra.Prms-maxResultWaitSec           = 900;
hydra.Prms-maxCloseTaskResultWaitSec  = 900;

