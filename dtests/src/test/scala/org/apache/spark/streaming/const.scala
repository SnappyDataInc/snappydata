package org.apache.spark.streaming


object Consts {
  
  //===========================
  // PARAMETER DEFINE
  //===========================

  val RUN_PERSISTENTLY = false

  val MEASURE_TIME = 60
  val DATAFRAME_WIDTH = 5
  val GROUP_WIDTH = 3 //static time window based on data generated time

  val SRC1_TABLE_NAME   = "APP.ACCELERATION"
  val SRC2_TABLE_NAME   = "APP.BIO_INFO"
  val SRC3_TABLE_NAME   = "APP.ENVIRONMENT"

  val SRC_TABLE_NAME = Array(SRC1_TABLE_NAME, SRC2_TABLE_NAME, SRC3_TABLE_NAME)

  // Note: Do not add a schema name like "APP.STREAM_ACCELERATION"
  // SnappyData returns the following exception 
  // org.apache.spark.sql.AnalysisException:  temp table name can not have db prefix;
  val SRC1_STREAMTABLE_NAME = "STREAM_ACCELERATION"
  val SRC2_STREAMTABLE_NAME = "STREAM_BIO_INFO"
  val SRC3_STREAMTABLE_NAME = "STREAM_ENVIRONMENT"


  val SRC1_TABLE_SCHEMA = s"(${Col.ID} varchar(100), ${Col.ACC_TS} timestamp, ${Col.ACC_DATA1} double, ${Col.ACC_DATA2} double, ${Col.ACC_DATA3} double, PRIMARY KEY (${Col.ID}, ${Col.ACC_TS}))"

  val SRC2_TABLE_SCHEMA = s"(${Col.ID} varchar(100), ${Col.BIO_TS} timestamp, ${Col.BIO_DATA1} double, ${Col.BIO_DATA2} double, PRIMARY KEY (${Col.ID}, ${Col.BIO_TS}))"
  
  val SRC3_TABLE_SCHEMA = s"(${Col.ID} varchar(100), ${Col.ENV_TS} timestamp, ${Col.ENV_DATA1} double, ${Col.ENV_DATA2} double, ${Col.ENV_DATA3} double, PRIMARY KEY (${Col.ID}, ${Col.BIO_TS}))"

  val SRC_TABLE_SCHEMA = Array(SRC1_TABLE_SCHEMA, SRC2_TABLE_SCHEMA, SRC3_TABLE_SCHEMA)

  // BuildConfig is generated by gradle automatically
  // If you change the values below, please edit build.gradle and gradle.properties
  // [Reference] http://qiita.com/shts/items/d94834437b22712415c5
//  val HDFS_HOST   = BuildConfig.HDFS_HOST //e.g) ide-snappy-loclead:9000
//  val HDFS_USER   = BuildConfig.HDFS_USER //e.g) ubuntu

  val SOURCE1_DIR = s"/tmp/ACC"
  val SOURCE2_DIR = s"/tmp/BIO"
  val SOURCE3_DIR = s"/tmp/ENV"

  val TABLE_TYPE  = "row" //column or row or jdbc

  val TABLE_PROPS = Map(
         "PARTITION_BY" -> "USER_ID"
        ,"BUCKETS"      -> "113"   //Partitions. recommended:prime number & large
        ,"REDUNDANCY"   -> "1"  
      )

  val TIME_FORMAT = "yyyy/MM/DD HH:mm:ss"

}

object Col {
  val ID = "USER_ID"
  
  val ACC_TS = "TIMESTAMP"
  val ACC_DATA1 = "AX"
  val ACC_DATA2 = "AY"
  val ACC_DATA3 = "AZ"

  val BIO_TS = "TIMESTAMP"
  val BIO_DATA1 = "HEART_RATE"
  val BIO_DATA2 = "BREATH_RATE"

  val ENV_TS = "TIMESTAMP"
  val ENV_DATA1 = "TEMPERATURE"
  val ENV_DATA2 = "HUMIDITY"
  val ENV_DATA3 = "ILLUMINANCE"

  val SENSOR_CODE = "ITEMNAME"
  val SENSOR_VALUE = "NUMBERVALUE"

}
