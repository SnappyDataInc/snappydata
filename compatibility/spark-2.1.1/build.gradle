/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

apply plugin: 'scala'

compileScala.options.encoding = 'UTF-8'

dependencies {
  compileOnly 'org.scala-lang:scala-library:' + scalaVersion
  compileOnly 'org.scala-lang:scala-reflect:' + scalaVersion

  compileOnly 'org.slf4j:slf4j-api:' + slf4jVersion
  compileOnly 'org.slf4j:slf4j-log4j12:' + slf4jVersion
  compileOnly 'org.slf4j:jcl-over-slf4j:' + slf4jVersion
  compileOnly 'org.slf4j:jul-to-slf4j:' + slf4jVersion

  compileOnly("org.apache.spark:spark-core_${scalaBinaryVersion}:${spark211Version}")
  compileOnly("org.apache.spark:spark-catalyst_${scalaBinaryVersion}:${spark211Version}")
  compileOnly("org.apache.spark:spark-sql_${scalaBinaryVersion}:${spark211Version}")
  compileOnly("org.apache.spark:spark-hive_${scalaBinaryVersion}:${spark211Version}")
  compileOnly("org.apache.spark:spark-streaming_${scalaBinaryVersion}:${spark211Version}")

  compileOnly "org.eclipse.jetty:jetty-servlet:${jettyVersion}"

  compile (project(":snappy-core_${scalaBinaryVersion}")) {
    exclude(group: 'org.apache.spark', module: 'spark-unsafe_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-core_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-catalyst_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-sql_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-hive_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-streaming_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-streaming-kafka-0-8_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-mllib_' + scalaBinaryVersion)
    exclude(group: 'org.eclipse.jetty', module: 'jetty-servlet')
  }
  compile (project(":snappy-core_${scalaBinaryVersion}:spark${spark210Version}")) {
    exclude(group: 'org.apache.spark', module: 'spark-unsafe_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-core_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-catalyst_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-sql_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-hive_' + scalaBinaryVersion)
    exclude(group: 'org.apache.spark', module: 'spark-streaming_' + scalaBinaryVersion)
  }
}

archivesBaseName = "snappydata-core-compat-spark${spark211Version}_${scalaBinaryVersion}"
String sparkPackageName = "snappydata-${version}_${spark211Version}-s_${scalaBinaryVersion}"

createCoreJarTasks(spark211Version, archivesBaseName, sparkPackageName)
